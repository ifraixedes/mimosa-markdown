// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  exports.defaults = function() {
    return {
      markdown: {
        extensions: ['md'],
        options: {}
      }
    };
  };

  exports.validate = function(config, validators) {
    var errors, extension, i, len, ref, rendererOptionType;
    errors = [];
    if (validators.ifExistsIsObject(errors, 'markdown config', config.markdown)) {
      if (validators.ifExistsIsArray(errors, 'markdown.extensions', config.markdown.extensions)) {
        ref = config.markdown.extensions;
        for (i = 0, len = ref.length; i < len; i++) {
          extension = ref[i];
          if (typeof extension !== 'string') {
            errors.push('markdown.extensions must be an array of strings');
            break;
          }
        }
      }
      if (validators.ifExistsIsObject(errors, 'markdown.options', config.markdown.options)) {
        if (config.markdown.options.renderer != null) {
          rendererOptionType = typeof config.markdown.options.renderer;
          if (rendererOptionType !== 'string' && rendererOptionType !== 'object' && rendererOptionType !== 'function') {
            errors.push('markdown.options.renderer must be a string or an object or a function');
          }
        }
        if (config.markdown.options.highlight != null) {
          rendererOptionType = typeof config.markdown.options.highlight;
          if (rendererOptionType !== 'string' && rendererOptionType !== 'function') {
            errors.push('markdown.options.highlight must be a string or a function');
          }
        }
      }
    }
    return errors;
  };

}).call(this);
